.code16
.global _start
.text
BOOTSEG = 0x07c0             # BIOS 加载 bootsect 代码的原始段地址；

_start:
    ljmp $BOOTSEG, $go            #段间跳转。INITSEG 指出跳转段地址，标号 go 是偏移地址。
go: mov %cs, %ax             # 段寄存器 cs 值-->ax，用于初始化数据段寄存器 ds 和 es。
    mov %ax, %ds
    mov %ax, %es

clean_screen1:
    #mov $0, %ch
    #mov $0, %cl
    #mov $24, %dh
    #mov $79, %dl
    #mov $17, %bh
    #mov $0, %al
    #mov $0x06, %ah
    #int $0x10
clean_screen2:
    mov $0x00, %ah
    mov $0x03, %al
    int $0x10

    #mov %ah, %cs:msg + 17 # 0x07-->替换字符串中 1 个点符号，喇叭将会鸣一声。
    #mov $480, %cx            # 共显示 20 个字符，包括回车换行符。
    #mov $0x0000, %dx        #字符串将显示在屏幕第 17 行、第 5 列处。
    #mov $0x0021, %bx        # 字符显示属性（红色）。
    #mov $msg, %bp          # 指向要显示的字符串（中断调用要求）。
    #mov $0x1301, %ax        # 写字符串并移动光标到串结尾处。
    #int $0x10                # BIOS 中断调用 0x10，功能 0x13，子功能 01。
loop1:
    jmp loop1               # 死循环。
msg:
    .ascii "01234567890123456789012345678901234567890123456789012345678901234567890123456789"         # 调用 BIOS 中断显示的信息。共 20 个 ASCII 码字符。
    .ascii "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
    .ascii "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
    .ascii "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
    .ascii "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
    .ascii "01234567890123456789012345678901234567890123456789012345678901234567890123456789"

.org 510                                # 表示以后语句从地址 510(0x1FE)开始存放。
    .word 0xAA55                        # 有效引导扇区标志，供 BIOS 加载引导扇区使用。
